{"ast":null,"code":"var _jsxFileName = \"/home/ricardo/Documents/adamoautos/frontend/src/main-component/ForgotPassword/index.js\";\nimport React, { useState } from 'react';\nimport Grid from \"@material-ui/core/Grid\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { toast } from \"react-toastify\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { Link, withRouter } from \"react-router-dom\";\nconst ForgotPassword = props => {\n  const [value, setValue] = useState({\n    email: ''\n  });\n  const changeHandler = e => {\n    setValue({\n      ...value,\n      [e.target.name]: e.target.value\n    });\n    validator.showMessages();\n  };\n  const [validator] = React.useState(new SimpleReactValidator({\n    className: 'errorMessage'\n  }));\n  const submitForm = e => {\n    e.preventDefault();\n    if (validator.allValid()) {\n      setValue({\n        email: ''\n      });\n      validator.hideMessages();\n      toast.success('You successfully Login!');\n      props.history.push('/login');\n    } else {\n      validator.showMessages();\n      toast.error('Empty field is not allowed!');\n    }\n  };\n  return /*#__PURE__*/React.createElement(Grid, {\n    className: \"loginWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: \"loginForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, \"Forgot Password\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, \"Reset your account password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: submitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: \"inputOutline\",\n    fullWidth: true,\n    placeholder: \"E-mail\",\n    value: value.email,\n    variant: \"outlined\",\n    name: \"email\",\n    label: \"E-mail\",\n    InputLabelProps: {\n      shrink: true\n    },\n    onBlur: e => changeHandler(e),\n    onChange: e => changeHandler(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }), validator.message('email', value.email, 'required|email')), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: \"formFooter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    className: \"cBtn cBtnLarge cBtnTheme\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 33\n    }\n  }, \"Resend Password\")), /*#__PURE__*/React.createElement(Grid, {\n    className: \"loginWithSocial\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"facebook\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-facebook\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 62\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"twitter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-twitter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 61\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"linkedin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-linkedin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 62\n    }\n  }))), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"noteHelp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  }, \"Already have an account? \", /*#__PURE__*/React.createElement(Link, {\n    to: \"/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 78\n    }\n  }, \"Return to Sign In\")))))));\n};\nexport default withRouter(ForgotPassword);","map":{"version":3,"names":["React","useState","Grid","SimpleReactValidator","toast","TextField","Button","Link","withRouter","ForgotPassword","props","value","setValue","email","changeHandler","e","target","name","validator","showMessages","className","submitForm","preventDefault","allValid","hideMessages","success","history","push","error","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","container","spacing","item","xs","fullWidth","placeholder","variant","label","InputLabelProps","shrink","onBlur","onChange","message","type","to"],"sources":["/home/ricardo/Documents/adamoautos/frontend/src/main-component/ForgotPassword/index.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport SimpleReactValidator from \"simple-react-validator\";\r\nimport {toast} from \"react-toastify\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {Link, withRouter} from \"react-router-dom\";\r\n\r\n\r\nconst ForgotPassword = (props) => {\r\n    const [value, setValue] = useState({\r\n        email: '',\r\n    });\r\n\r\n    const changeHandler = (e) => {\r\n        setValue({...value, [e.target.name]: e.target.value});\r\n        validator.showMessages();\r\n    };\r\n\r\n    const [validator] = React.useState(new SimpleReactValidator({\r\n        className: 'errorMessage'\r\n    }));\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault();\r\n        if (validator.allValid()) {\r\n            setValue({\r\n                email: '',\r\n            });\r\n            validator.hideMessages();\r\n            toast.success('You successfully Login!');\r\n            props.history.push('/login');\r\n        } else {\r\n            validator.showMessages();\r\n            toast.error('Empty field is not allowed!');\r\n        }\r\n    };\r\n    return (\r\n        <Grid className=\"loginWrapper\">\r\n\r\n            <Grid className=\"loginForm\">\r\n                <h2>Forgot Password</h2>\r\n                <p>Reset your account password</p>\r\n                <form onSubmit={submitForm}>\r\n                    <Grid container spacing={3}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                className=\"inputOutline\"\r\n                                fullWidth\r\n                                placeholder=\"E-mail\"\r\n                                value={value.email}\r\n                                variant=\"outlined\"\r\n                                name=\"email\"\r\n                                label=\"E-mail\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                onBlur={(e) => changeHandler(e)}\r\n                                onChange={(e) => changeHandler(e)}\r\n                            />\r\n                            {validator.message('email', value.email, 'required|email')}\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Grid className=\"formFooter\">\r\n                                <Button fullWidth className=\"cBtn cBtnLarge cBtnTheme\" type=\"submit\">Resend\r\n                                    Password</Button>\r\n                            </Grid>\r\n                            <Grid className=\"loginWithSocial\">\r\n                                <Button className=\"facebook\"><i className=\"fa fa-facebook\"></i></Button>\r\n                                <Button className=\"twitter\"><i className=\"fa fa-twitter\"></i></Button>\r\n                                <Button className=\"linkedin\"><i className=\"fa fa-linkedin\"></i></Button>\r\n                            </Grid>\r\n                            <p className=\"noteHelp\">Already have an account? <Link to=\"/login\">Return to Sign In</Link>\r\n                            </p>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n};\r\n\r\nexport default withRouter(ForgotPassword);"],"mappings":"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"},"metadata":{},"sourceType":"module"}